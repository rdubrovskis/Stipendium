@using PagedList.Mvc
@using Stipendium.Models;
@model Stipendium.Models.SearchQuery

@{
    ViewBag.Title = "Index";
    var query = ViewData["Query"] ?? new SearchQuery();
    string items = "";

    foreach (var item in Model.ToList())
    {
        items = items + item.ID + "&";

    }
}
<style>
    .pagination {
        margin:5px;
    }
    th {
        min-width: 150px;
    }
</style>

<h2>Stipendium</h2>

<br />

@*<p>
    @Html.ActionLink("Create New", "Create")
</p>*@

@{ Html.RenderPartial("_Search", query);}

<br />

<p>Total records: @Model.TotalItemCount</p>

<div class="pagination">
@Html.PagedListPager(Model, page => Url.Action("NewPage", new { page = page, size = Model.PageSize, items = ViewData["IDs"] }))
</div>
<table class="table">
    <tr>
        <th>
            Siftelsenamn
        </th>
        <th>
            Ändamål
        </th>
        <th>
            Förmögenhet (SEK)
        </th>
        <th>

        </th>
        @*<th></th>*@
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.ActionLink(item.Title, "Details", new { id = item.ID })
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Capital) kr
            </td>
            <td>

            </td>
            @*<td >
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID })
            </td>*@
        </tr>
    }

</table>

<script></script>
